<%= form_with model: Post.new, remote: true do |f| %>
  <div class="form-group">
    <%= f.text_area :content, class: "form-control" %>
  </div>
  <div class="form-group">
    <%= f.submit class: "btn btn-primary" %>
  </div>
<% end %>

<div id="post-list">
  <% @posts.each do |post| %>
    <%= render partial: "post", locals: { post: post } %>
  <% end %>
</div>

<script>
  // 这会绑 click 事件到所有有 `.delete-post` class 的元素上，也就是所有的删除按钮
  $("#post-list").on('click', '.delete-post', function (evt) {
    // `evt` 是浏览器的事件对象，evt.preventDefault(); 会终止这个元素的默认行为：
    // 超连结 a 的默认行为是跳到下一页，如果没有这行的话，送出 ajax 后会跳去 show page
    evt.preventDefault();
    // this 是个特别的变量，代表触发事件的元素。使用 attr 可以读取元素的属性，这里要拿到超连结的网址
    var url = $(this).attr("href");

    // 送出 Ajax
    $.ajax({
      url: url,
      method: 'DELETE',
      dataType: 'json', // 要求服务器回传 json
      success: function (data) {   // data 就是服务器回传的 JSON 资料
        $("#post-" + data["id"]).remove();
      }
    })
  })

  //2.文章无限滚动
  var current_post_id = <%= @posts.last.id %>; // 初始化变量：每个分页最后一篇文章的 id，在 index.js.erb 中改变变量
  var post_bottom_id = <%= Post.first.id %>;   // 底部文章的 id
  $(window).scroll(function () {               // 滚动事件
    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {// 当滚到最下面的时候
      var url = "/posts?max_id=" + current_post_id; // 传参给 controller
      if (current_post_id > post_bottom_id) {
        $.ajax({
          method: "GET",
          url: url,
          dataType: "script"
        })
      } else {
        console.log("data ended")
      }
    }
  })

  //3.核选方块做开关
  $("#post-list").on("change", ".toggle-flag", function () {
    var url = $(this).data("url");
    $.ajax({
      url: url,
      method: "POST",
      dataType: "json",
      success: function (data) {
        if (data["flag_at"]) {
          $("#post-flag-" + data["id"]).html(data["flag_at"]);
        } else {
          $("#post-flag-" + data["id"]).html("");
        }
      }
    });
  });
</script>